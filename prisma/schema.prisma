// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recrutador {
  id_recrutador    String   @id @default(uuid())
  nome             String
  email            String   @unique
  senha            String
  cargo            String
  telefone         String
  id_empresa       String
  empresa          Empresa  @relation(fields: [id_empresa], references: [id_empresa])
  contratacoes     Contratacao[]
  data_criacao     DateTime @default(now())
  data_atualizacao DateTime @updatedAt

  @@map("recrutador")
}

model Empresa {
  id_empresa       String   @id @default(uuid())
  nome             String
  cnpj             String   @unique
  endereco         String
  setor            String
  descricao        String?
  website          String?
  recrutadores     Recrutador[]
  data_criacao     DateTime @default(now())
  data_atualizacao DateTime @updatedAt

  @@map("empresa")
}

model Aluno {
  id_aluno         String   @id @default(uuid())
  nome             String
  email            String   @unique
  senha            String
  matricula        String   @unique
  curso            String
  semestre_atual   Int
  cpf              String   @unique
  telefone         String
  data_nascimento  DateTime
  endereco         String
  linkedin         String?
  github           String?
  portfolio        String?
  contratacoes     Contratacao[]
  notas            Nota[]
  aptidoes         Aptidao[]
  solicitacoes     Int      @default(0)
  data_criacao     DateTime @default(now())
  data_atualizacao DateTime @updatedAt

  @@map("aluno")
}

model Contratacao {
  id_contratacao   String   @id @default(uuid())
  id_recrutador    String
  id_aluno         String
  data_contratacao DateTime @default(now())
  cargo            String
  salario          Float?
  status           String   // "PENDENTE", "ACEITO", "RECUSADO"
  recrutador       Recrutador @relation(fields: [id_recrutador], references: [id_recrutador])
  aluno            Aluno      @relation(fields: [id_aluno], references: [id_aluno])

  @@map("contratacao")
}

model Nota {
  id_nota          String   @id @default(uuid())
  id_aluno         String
  disciplina       String
  nota             Float
  semestre         Int
  aluno            Aluno    @relation(fields: [id_aluno], references: [id_aluno])

  @@map("nota")
}

model Aptidao {
  id_aptidao       String   @id @default(uuid())
  id_aluno         String
  nome             String
  nivel            Int      // 1-5
  descricao        String?
  aluno            Aluno    @relation(fields: [id_aluno], references: [id_aluno])

  @@map("aptidao")
}